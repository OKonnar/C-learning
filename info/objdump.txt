
./clay:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	pushq  0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmpq *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmpq *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <free@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmpq *0x2f2d(%rip)        # 3fb8 <free@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <write@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmpq *0x2f25(%rip)        # 3fc0 <write@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <__stack_chk_fail@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <malloc@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fd0 <malloc@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 d6 0a 00 00 	lea    0xad6(%rip),%r8        # 1bb0 <__libc_csu_fini>
    10da:	48 8d 0d 5f 0a 00 00 	lea    0xa5f(%rip),%rcx        # 1b40 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	callq  1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 83 ec 20          	sub    $0x20,%rsp
    11b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11bc:	00 00 
    11be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11c2:	31 c0                	xor    %eax,%eax
    11c4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    11cb:	00 
    11cc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    11d0:	48 89 c6             	mov    %rax,%rsi
    11d3:	48 8d 3d 2e 0e 00 00 	lea    0xe2e(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    11da:	e8 15 02 00 00       	callq  13f4 <cl_strdup>
    11df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    11e3:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    11e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11eb:	48 89 d6             	mov    %rdx,%rsi
    11ee:	48 89 c7             	mov    %rax,%rdi
    11f1:	e8 d6 04 00 00       	callq  16cc <cl_stwa>
    11f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    11fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    11fe:	48 89 c7             	mov    %rax,%rdi
    1201:	e8 88 01 00 00       	callq  138e <cl_sort_array>
    1206:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    120a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    120e:	48 89 c7             	mov    %rax,%rdi
    1211:	e8 4a 06 00 00       	callq  1860 <print_arr>
    1216:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    121a:	48 89 c7             	mov    %rax,%rdi
    121d:	e8 8c 05 00 00       	callq  17ae <cl_free>
    1222:	b8 00 00 00 00       	mov    $0x0,%eax
    1227:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    122b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1232:	00 00 
    1234:	74 05                	je     123b <main+0x92>
    1236:	e8 65 fe ff ff       	callq  10a0 <__stack_chk_fail@plt>
    123b:	c9                   	leaveq 
    123c:	c3                   	retq   

000000000000123d <str_swap>:
    123d:	f3 0f 1e fa          	endbr64 
    1241:	55                   	push   %rbp
    1242:	48 89 e5             	mov    %rsp,%rbp
    1245:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1249:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    124d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1251:	48 8b 00             	mov    (%rax),%rax
    1254:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1258:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    125c:	48 8b 10             	mov    (%rax),%rdx
    125f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1263:	48 89 10             	mov    %rdx,(%rax)
    1266:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    126a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    126e:	48 89 10             	mov    %rdx,(%rax)
    1271:	90                   	nop
    1272:	5d                   	pop    %rbp
    1273:	c3                   	retq   

0000000000001274 <check_swap>:
    1274:	f3 0f 1e fa          	endbr64 
    1278:	55                   	push   %rbp
    1279:	48 89 e5             	mov    %rsp,%rbp
    127c:	48 83 ec 10          	sub    $0x10,%rsp
    1280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1284:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1287:	8b 45 f4             	mov    -0xc(%rbp),%eax
    128a:	48 98                	cltq   
    128c:	48 83 c0 01          	add    $0x1,%rax
    1290:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1297:	00 
    1298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    129c:	48 01 d0             	add    %rdx,%rax
    129f:	48 8b 10             	mov    (%rax),%rdx
    12a2:	8b 45 f4             	mov    -0xc(%rbp),%eax
    12a5:	48 98                	cltq   
    12a7:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    12ae:	00 
    12af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12b3:	48 01 c8             	add    %rcx,%rax
    12b6:	48 8b 00             	mov    (%rax),%rax
    12b9:	48 89 d6             	mov    %rdx,%rsi
    12bc:	48 89 c7             	mov    %rax,%rdi
    12bf:	e8 41 06 00 00       	callq  1905 <str_cmp>
    12c4:	85 c0                	test   %eax,%eax
    12c6:	7e 37                	jle    12ff <check_swap+0x8b>
    12c8:	8b 45 f4             	mov    -0xc(%rbp),%eax
    12cb:	48 98                	cltq   
    12cd:	48 83 c0 01          	add    $0x1,%rax
    12d1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    12d8:	00 
    12d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12dd:	48 01 c2             	add    %rax,%rdx
    12e0:	8b 45 f4             	mov    -0xc(%rbp),%eax
    12e3:	48 98                	cltq   
    12e5:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    12ec:	00 
    12ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12f1:	48 01 c8             	add    %rcx,%rax
    12f4:	48 89 d6             	mov    %rdx,%rsi
    12f7:	48 89 c7             	mov    %rax,%rdi
    12fa:	e8 3e ff ff ff       	callq  123d <str_swap>
    12ff:	90                   	nop
    1300:	c9                   	leaveq 
    1301:	c3                   	retq   

0000000000001302 <is_sorted>:
    1302:	f3 0f 1e fa          	endbr64 
    1306:	55                   	push   %rbp
    1307:	48 89 e5             	mov    %rsp,%rbp
    130a:	48 83 ec 20          	sub    $0x20,%rsp
    130e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1312:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1319:	eb 4c                	jmp    1367 <is_sorted+0x65>
    131b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    131e:	48 98                	cltq   
    1320:	48 83 c0 01          	add    $0x1,%rax
    1324:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    132b:	00 
    132c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1330:	48 01 d0             	add    %rdx,%rax
    1333:	48 8b 10             	mov    (%rax),%rdx
    1336:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1339:	48 98                	cltq   
    133b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    1342:	00 
    1343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1347:	48 01 c8             	add    %rcx,%rax
    134a:	48 8b 00             	mov    (%rax),%rax
    134d:	48 89 d6             	mov    %rdx,%rsi
    1350:	48 89 c7             	mov    %rax,%rdi
    1353:	e8 ad 05 00 00       	callq  1905 <str_cmp>
    1358:	85 c0                	test   %eax,%eax
    135a:	7e 07                	jle    1363 <is_sorted+0x61>
    135c:	b8 00 00 00 00       	mov    $0x0,%eax
    1361:	eb 29                	jmp    138c <is_sorted+0x8a>
    1363:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1367:	8b 45 fc             	mov    -0x4(%rbp),%eax
    136a:	48 98                	cltq   
    136c:	48 83 c0 01          	add    $0x1,%rax
    1370:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1377:	00 
    1378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    137c:	48 01 d0             	add    %rdx,%rax
    137f:	48 8b 00             	mov    (%rax),%rax
    1382:	48 85 c0             	test   %rax,%rax
    1385:	75 94                	jne    131b <is_sorted+0x19>
    1387:	b8 01 00 00 00       	mov    $0x1,%eax
    138c:	c9                   	leaveq 
    138d:	c3                   	retq   

000000000000138e <cl_sort_array>:
    138e:	f3 0f 1e fa          	endbr64 
    1392:	55                   	push   %rbp
    1393:	48 89 e5             	mov    %rsp,%rbp
    1396:	48 83 ec 20          	sub    $0x20,%rsp
    139a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    139e:	eb 3e                	jmp    13de <cl_sort_array+0x50>
    13a0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    13a7:	eb 15                	jmp    13be <cl_sort_array+0x30>
    13a9:	8b 55 fc             	mov    -0x4(%rbp),%edx
    13ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b0:	89 d6                	mov    %edx,%esi
    13b2:	48 89 c7             	mov    %rax,%rdi
    13b5:	e8 ba fe ff ff       	callq  1274 <check_swap>
    13ba:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    13be:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13c1:	48 98                	cltq   
    13c3:	48 83 c0 01          	add    $0x1,%rax
    13c7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    13ce:	00 
    13cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13d3:	48 01 d0             	add    %rdx,%rax
    13d6:	48 8b 00             	mov    (%rax),%rax
    13d9:	48 85 c0             	test   %rax,%rax
    13dc:	75 cb                	jne    13a9 <cl_sort_array+0x1b>
    13de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13e2:	48 89 c7             	mov    %rax,%rdi
    13e5:	e8 18 ff ff ff       	callq  1302 <is_sorted>
    13ea:	85 c0                	test   %eax,%eax
    13ec:	74 b2                	je     13a0 <cl_sort_array+0x12>
    13ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13f2:	c9                   	leaveq 
    13f3:	c3                   	retq   

00000000000013f4 <cl_strdup>:
    13f4:	f3 0f 1e fa          	endbr64 
    13f8:	55                   	push   %rbp
    13f9:	48 89 e5             	mov    %rsp,%rbp
    13fc:	48 83 ec 20          	sub    $0x20,%rsp
    1400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1404:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1408:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 3f 06 00 00       	callq  1a53 <str_length>
    1414:	8d 50 01             	lea    0x1(%rax),%edx
    1417:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    141b:	48 89 c6             	mov    %rax,%rsi
    141e:	89 d7                	mov    %edx,%edi
    1420:	e8 e0 03 00 00       	callq  1805 <cl_malloc>
    1425:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1429:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1430:	eb 23                	jmp    1455 <cl_strdup+0x61>
    1432:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1435:	48 63 d0             	movslq %eax,%rdx
    1438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    143c:	48 01 d0             	add    %rdx,%rax
    143f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    1442:	48 63 ca             	movslq %edx,%rcx
    1445:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1449:	48 01 ca             	add    %rcx,%rdx
    144c:	0f b6 00             	movzbl (%rax),%eax
    144f:	88 02                	mov    %al,(%rdx)
    1451:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1455:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1458:	48 63 d0             	movslq %eax,%rdx
    145b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    145f:	48 01 d0             	add    %rdx,%rax
    1462:	0f b6 00             	movzbl (%rax),%eax
    1465:	84 c0                	test   %al,%al
    1467:	75 c9                	jne    1432 <cl_strdup+0x3e>
    1469:	8b 45 f4             	mov    -0xc(%rbp),%eax
    146c:	48 63 d0             	movslq %eax,%rdx
    146f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1473:	48 01 d0             	add    %rdx,%rax
    1476:	c6 00 00             	movb   $0x0,(%rax)
    1479:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    147d:	c9                   	leaveq 
    147e:	c3                   	retq   

000000000000147f <malloc_str>:
    147f:	f3 0f 1e fa          	endbr64 
    1483:	55                   	push   %rbp
    1484:	48 89 e5             	mov    %rsp,%rbp
    1487:	53                   	push   %rbx
    1488:	48 83 ec 38          	sub    $0x38,%rsp
    148c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1490:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1494:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    1498:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    149f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    14a6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    14ad:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    14b4:	e9 96 00 00 00       	jmpq   154f <malloc_str+0xd0>
    14b9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    14bc:	48 63 d0             	movslq %eax,%rdx
    14bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    14c3:	48 01 d0             	add    %rdx,%rax
    14c6:	0f b6 00             	movzbl (%rax),%eax
    14c9:	0f be c0             	movsbl %al,%eax
    14cc:	89 c7                	mov    %eax,%edi
    14ce:	e8 16 06 00 00       	callq  1ae9 <str_isalpha>
    14d3:	83 f8 01             	cmp    $0x1,%eax
    14d6:	75 0d                	jne    14e5 <malloc_str+0x66>
    14d8:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    14dc:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    14e3:	eb 66                	jmp    154b <malloc_str+0xcc>
    14e5:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
    14e9:	75 60                	jne    154b <malloc_str+0xcc>
    14eb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    14ee:	8d 50 01             	lea    0x1(%rax),%edx
    14f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14f5:	48 8b 00             	mov    (%rax),%rax
    14f8:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    14fb:	48 63 c9             	movslq %ecx,%rcx
    14fe:	48 c1 e1 03          	shl    $0x3,%rcx
    1502:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
    1506:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    150a:	48 89 c6             	mov    %rax,%rsi
    150d:	89 d7                	mov    %edx,%edi
    150f:	e8 f1 02 00 00       	callq  1805 <cl_malloc>
    1514:	48 89 03             	mov    %rax,(%rbx)
    1517:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    151b:	48 8b 00             	mov    (%rax),%rax
    151e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    1521:	48 63 d2             	movslq %edx,%rdx
    1524:	48 c1 e2 03          	shl    $0x3,%rdx
    1528:	48 01 d0             	add    %rdx,%rax
    152b:	48 8b 10             	mov    (%rax),%rdx
    152e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1531:	48 98                	cltq   
    1533:	48 01 d0             	add    %rdx,%rax
    1536:	c6 00 00             	movb   $0x0,(%rax)
    1539:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    153d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    1544:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    154b:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    154f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1552:	48 63 d0             	movslq %eax,%rdx
    1555:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1559:	48 01 d0             	add    %rdx,%rax
    155c:	0f b6 00             	movzbl (%rax),%eax
    155f:	84 c0                	test   %al,%al
    1561:	0f 85 52 ff ff ff    	jne    14b9 <malloc_str+0x3a>
    1567:	8b 45 e8             	mov    -0x18(%rbp),%eax
    156a:	8d 50 01             	lea    0x1(%rax),%edx
    156d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1571:	48 8b 00             	mov    (%rax),%rax
    1574:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1577:	48 63 c9             	movslq %ecx,%rcx
    157a:	48 c1 e1 03          	shl    $0x3,%rcx
    157e:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
    1582:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1586:	48 89 c6             	mov    %rax,%rsi
    1589:	89 d7                	mov    %edx,%edi
    158b:	e8 75 02 00 00       	callq  1805 <cl_malloc>
    1590:	48 89 03             	mov    %rax,(%rbx)
    1593:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1597:	48 8b 00             	mov    (%rax),%rax
    159a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    159d:	48 63 d2             	movslq %edx,%rdx
    15a0:	48 c1 e2 03          	shl    $0x3,%rdx
    15a4:	48 01 d0             	add    %rdx,%rax
    15a7:	48 8b 10             	mov    (%rax),%rdx
    15aa:	8b 45 e8             	mov    -0x18(%rbp),%eax
    15ad:	48 98                	cltq   
    15af:	48 01 d0             	add    %rdx,%rax
    15b2:	c6 00 00             	movb   $0x0,(%rax)
    15b5:	90                   	nop
    15b6:	48 83 c4 38          	add    $0x38,%rsp
    15ba:	5b                   	pop    %rbx
    15bb:	5d                   	pop    %rbp
    15bc:	c3                   	retq   

00000000000015bd <malloc_arr>:
    15bd:	f3 0f 1e fa          	endbr64 
    15c1:	55                   	push   %rbp
    15c2:	48 89 e5             	mov    %rsp,%rbp
    15c5:	48 83 ec 30          	sub    $0x30,%rsp
    15c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15cd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15d1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    15d8:	00 00 
    15da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15de:	31 c0                	xor    %eax,%eax
    15e0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    15e7:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    15ee:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    15f5:	eb 59                	jmp    1650 <malloc_arr+0x93>
    15f7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15fa:	48 63 d0             	movslq %eax,%rdx
    15fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1601:	48 01 d0             	add    %rdx,%rax
    1604:	0f b6 00             	movzbl (%rax),%eax
    1607:	0f be c0             	movsbl %al,%eax
    160a:	89 c7                	mov    %eax,%edi
    160c:	e8 d8 04 00 00       	callq  1ae9 <str_isalpha>
    1611:	85 c0                	test   %eax,%eax
    1613:	75 11                	jne    1626 <malloc_arr+0x69>
    1615:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
    1619:	75 0b                	jne    1626 <malloc_arr+0x69>
    161b:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    161f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    1626:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1629:	48 63 d0             	movslq %eax,%rdx
    162c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1630:	48 01 d0             	add    %rdx,%rax
    1633:	0f b6 00             	movzbl (%rax),%eax
    1636:	0f be c0             	movsbl %al,%eax
    1639:	89 c7                	mov    %eax,%edi
    163b:	e8 a9 04 00 00       	callq  1ae9 <str_isalpha>
    1640:	83 f8 01             	cmp    $0x1,%eax
    1643:	75 07                	jne    164c <malloc_arr+0x8f>
    1645:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    164c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1650:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1653:	48 63 d0             	movslq %eax,%rdx
    1656:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    165a:	48 01 d0             	add    %rdx,%rax
    165d:	0f b6 00             	movzbl (%rax),%eax
    1660:	84 c0                	test   %al,%al
    1662:	75 93                	jne    15f7 <malloc_arr+0x3a>
    1664:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1667:	83 c0 01             	add    $0x1,%eax
    166a:	48 98                	cltq   
    166c:	c1 e0 03             	shl    $0x3,%eax
    166f:	89 c2                	mov    %eax,%edx
    1671:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1675:	48 89 c6             	mov    %rax,%rsi
    1678:	89 d7                	mov    %edx,%edi
    167a:	e8 86 01 00 00       	callq  1805 <cl_malloc>
    167f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1683:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1687:	8b 55 e8             	mov    -0x18(%rbp),%edx
    168a:	48 63 d2             	movslq %edx,%rdx
    168d:	48 c1 e2 03          	shl    $0x3,%rdx
    1691:	48 01 d0             	add    %rdx,%rax
    1694:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    169b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    169f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    16a3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    16a7:	48 89 ce             	mov    %rcx,%rsi
    16aa:	48 89 c7             	mov    %rax,%rdi
    16ad:	e8 cd fd ff ff       	callq  147f <malloc_str>
    16b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    16b6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    16ba:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    16c1:	00 00 
    16c3:	74 05                	je     16ca <malloc_arr+0x10d>
    16c5:	e8 d6 f9 ff ff       	callq  10a0 <__stack_chk_fail@plt>
    16ca:	c9                   	leaveq 
    16cb:	c3                   	retq   

00000000000016cc <cl_stwa>:
    16cc:	f3 0f 1e fa          	endbr64 
    16d0:	55                   	push   %rbp
    16d1:	48 89 e5             	mov    %rsp,%rbp
    16d4:	48 83 ec 30          	sub    $0x30,%rsp
    16d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    16dc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    16e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    16e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16e8:	48 89 d6             	mov    %rdx,%rsi
    16eb:	48 89 c7             	mov    %rax,%rdi
    16ee:	e8 ca fe ff ff       	callq  15bd <malloc_arr>
    16f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    16f7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    16fe:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1705:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    170c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1713:	eb 7b                	jmp    1790 <cl_stwa+0xc4>
    1715:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1718:	48 63 d0             	movslq %eax,%rdx
    171b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    171f:	48 01 d0             	add    %rdx,%rax
    1722:	0f b6 00             	movzbl (%rax),%eax
    1725:	0f be c0             	movsbl %al,%eax
    1728:	89 c7                	mov    %eax,%edi
    172a:	e8 ba 03 00 00       	callq  1ae9 <str_isalpha>
    172f:	83 f8 01             	cmp    $0x1,%eax
    1732:	75 40                	jne    1774 <cl_stwa+0xa8>
    1734:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1737:	48 63 d0             	movslq %eax,%rdx
    173a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    173e:	48 01 d0             	add    %rdx,%rax
    1741:	8b 55 f4             	mov    -0xc(%rbp),%edx
    1744:	48 63 d2             	movslq %edx,%rdx
    1747:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    174e:	00 
    174f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1753:	48 01 ca             	add    %rcx,%rdx
    1756:	48 8b 0a             	mov    (%rdx),%rcx
    1759:	8b 55 ec             	mov    -0x14(%rbp),%edx
    175c:	48 63 d2             	movslq %edx,%rdx
    175f:	48 01 ca             	add    %rcx,%rdx
    1762:	0f b6 00             	movzbl (%rax),%eax
    1765:	88 02                	mov    %al,(%rdx)
    1767:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    176b:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
    1772:	eb 18                	jmp    178c <cl_stwa+0xc0>
    1774:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
    1778:	75 12                	jne    178c <cl_stwa+0xc0>
    177a:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    177e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1785:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    178c:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    1790:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1793:	48 63 d0             	movslq %eax,%rdx
    1796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    179a:	48 01 d0             	add    %rdx,%rax
    179d:	0f b6 00             	movzbl (%rax),%eax
    17a0:	84 c0                	test   %al,%al
    17a2:	0f 85 6d ff ff ff    	jne    1715 <cl_stwa+0x49>
    17a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17ac:	c9                   	leaveq 
    17ad:	c3                   	retq   

00000000000017ae <cl_free>:
    17ae:	f3 0f 1e fa          	endbr64 
    17b2:	55                   	push   %rbp
    17b3:	48 89 e5             	mov    %rsp,%rbp
    17b6:	48 83 ec 20          	sub    $0x20,%rsp
    17ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    17be:	eb 2f                	jmp    17ef <cl_free+0x41>
    17c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    17c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17cc:	48 8b 00             	mov    (%rax),%rax
    17cf:	48 89 c7             	mov    %rax,%rdi
    17d2:	e8 a9 f8 ff ff       	callq  1080 <free@plt>
    17d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17db:	48 8b 40 08          	mov    0x8(%rax),%rax
    17df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    17e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17e7:	48 89 c7             	mov    %rax,%rdi
    17ea:	e8 91 f8 ff ff       	callq  1080 <free@plt>
    17ef:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    17f4:	75 ca                	jne    17c0 <cl_free+0x12>
    17f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17fa:	48 89 c7             	mov    %rax,%rdi
    17fd:	e8 7e f8 ff ff       	callq  1080 <free@plt>
    1802:	90                   	nop
    1803:	c9                   	leaveq 
    1804:	c3                   	retq   

0000000000001805 <cl_malloc>:
    1805:	f3 0f 1e fa          	endbr64 
    1809:	55                   	push   %rbp
    180a:	48 89 e5             	mov    %rsp,%rbp
    180d:	48 83 ec 20          	sub    $0x20,%rsp
    1811:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1814:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1818:	bf 10 00 00 00       	mov    $0x10,%edi
    181d:	e8 8e f8 ff ff       	callq  10b0 <malloc@plt>
    1822:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1826:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1829:	48 98                	cltq   
    182b:	48 89 c7             	mov    %rax,%rdi
    182e:	e8 7d f8 ff ff       	callq  10b0 <malloc@plt>
    1833:	48 89 c2             	mov    %rax,%rdx
    1836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    183a:	48 89 10             	mov    %rdx,(%rax)
    183d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1841:	48 8b 10             	mov    (%rax),%rdx
    1844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1848:	48 89 50 08          	mov    %rdx,0x8(%rax)
    184c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1850:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1854:	48 89 10             	mov    %rdx,(%rax)
    1857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    185b:	48 8b 00             	mov    (%rax),%rax
    185e:	c9                   	leaveq 
    185f:	c3                   	retq   

0000000000001860 <print_arr>:
    1860:	f3 0f 1e fa          	endbr64 
    1864:	55                   	push   %rbp
    1865:	48 89 e5             	mov    %rsp,%rbp
    1868:	48 83 ec 20          	sub    $0x20,%rsp
    186c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1870:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1877:	eb 39                	jmp    18b2 <print_arr+0x52>
    1879:	8b 45 fc             	mov    -0x4(%rbp),%eax
    187c:	48 98                	cltq   
    187e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1885:	00 
    1886:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    188a:	48 01 d0             	add    %rdx,%rax
    188d:	48 8b 00             	mov    (%rax),%rax
    1890:	48 89 c7             	mov    %rax,%rdi
    1893:	e8 3a 00 00 00       	callq  18d2 <print_str>
    1898:	ba 01 00 00 00       	mov    $0x1,%edx
    189d:	48 8d 35 94 07 00 00 	lea    0x794(%rip),%rsi        # 2038 <_IO_stdin_used+0x38>
    18a4:	bf 01 00 00 00       	mov    $0x1,%edi
    18a9:	e8 e2 f7 ff ff       	callq  1090 <write@plt>
    18ae:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    18b5:	48 98                	cltq   
    18b7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    18be:	00 
    18bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18c3:	48 01 d0             	add    %rdx,%rax
    18c6:	48 8b 00             	mov    (%rax),%rax
    18c9:	48 85 c0             	test   %rax,%rax
    18cc:	75 ab                	jne    1879 <print_arr+0x19>
    18ce:	90                   	nop
    18cf:	90                   	nop
    18d0:	c9                   	leaveq 
    18d1:	c3                   	retq   

00000000000018d2 <print_str>:
    18d2:	f3 0f 1e fa          	endbr64 
    18d6:	55                   	push   %rbp
    18d7:	48 89 e5             	mov    %rsp,%rbp
    18da:	48 83 ec 10          	sub    $0x10,%rsp
    18de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    18e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18e6:	48 89 c7             	mov    %rax,%rdi
    18e9:	e8 65 01 00 00       	callq  1a53 <str_length>
    18ee:	48 63 d0             	movslq %eax,%rdx
    18f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18f5:	48 89 c6             	mov    %rax,%rsi
    18f8:	bf 01 00 00 00       	mov    $0x1,%edi
    18fd:	e8 8e f7 ff ff       	callq  1090 <write@plt>
    1902:	90                   	nop
    1903:	c9                   	leaveq 
    1904:	c3                   	retq   

0000000000001905 <str_cmp>:
    1905:	f3 0f 1e fa          	endbr64 
    1909:	55                   	push   %rbp
    190a:	48 89 e5             	mov    %rsp,%rbp
    190d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1911:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1915:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    191c:	eb 54                	jmp    1972 <str_cmp+0x6d>
    191e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1921:	48 63 d0             	movslq %eax,%rdx
    1924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1928:	48 01 d0             	add    %rdx,%rax
    192b:	0f b6 10             	movzbl (%rax),%edx
    192e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1931:	48 63 c8             	movslq %eax,%rcx
    1934:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1938:	48 01 c8             	add    %rcx,%rax
    193b:	0f b6 00             	movzbl (%rax),%eax
    193e:	38 c2                	cmp    %al,%dl
    1940:	74 2c                	je     196e <str_cmp+0x69>
    1942:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1945:	48 63 d0             	movslq %eax,%rdx
    1948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    194c:	48 01 d0             	add    %rdx,%rax
    194f:	0f b6 00             	movzbl (%rax),%eax
    1952:	0f be d0             	movsbl %al,%edx
    1955:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1958:	48 63 c8             	movslq %eax,%rcx
    195b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    195f:	48 01 c8             	add    %rcx,%rax
    1962:	0f b6 00             	movzbl (%rax),%eax
    1965:	0f be c0             	movsbl %al,%eax
    1968:	29 c2                	sub    %eax,%edx
    196a:	89 d0                	mov    %edx,%eax
    196c:	eb 31                	jmp    199f <str_cmp+0x9a>
    196e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1972:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1975:	48 63 d0             	movslq %eax,%rdx
    1978:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    197c:	48 01 d0             	add    %rdx,%rax
    197f:	0f b6 00             	movzbl (%rax),%eax
    1982:	84 c0                	test   %al,%al
    1984:	75 98                	jne    191e <str_cmp+0x19>
    1986:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1989:	48 63 d0             	movslq %eax,%rdx
    198c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1990:	48 01 d0             	add    %rdx,%rax
    1993:	0f b6 00             	movzbl (%rax),%eax
    1996:	84 c0                	test   %al,%al
    1998:	75 84                	jne    191e <str_cmp+0x19>
    199a:	b8 00 00 00 00       	mov    $0x0,%eax
    199f:	5d                   	pop    %rbp
    19a0:	c3                   	retq   

00000000000019a1 <str_ncmp>:
    19a1:	f3 0f 1e fa          	endbr64 
    19a5:	55                   	push   %rbp
    19a6:	48 89 e5             	mov    %rsp,%rbp
    19a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    19ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    19b1:	89 55 dc             	mov    %edx,-0x24(%rbp)
    19b4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    19bb:	eb 60                	jmp    1a1d <str_ncmp+0x7c>
    19bd:	8b 45 dc             	mov    -0x24(%rbp),%eax
    19c0:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    19c3:	0f 8e 82 00 00 00    	jle    1a4b <str_ncmp+0xaa>
    19c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19cc:	48 63 d0             	movslq %eax,%rdx
    19cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19d3:	48 01 d0             	add    %rdx,%rax
    19d6:	0f b6 10             	movzbl (%rax),%edx
    19d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19dc:	48 63 c8             	movslq %eax,%rcx
    19df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    19e3:	48 01 c8             	add    %rcx,%rax
    19e6:	0f b6 00             	movzbl (%rax),%eax
    19e9:	38 c2                	cmp    %al,%dl
    19eb:	74 2c                	je     1a19 <str_ncmp+0x78>
    19ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19f0:	48 63 d0             	movslq %eax,%rdx
    19f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19f7:	48 01 d0             	add    %rdx,%rax
    19fa:	0f b6 00             	movzbl (%rax),%eax
    19fd:	0f be d0             	movsbl %al,%edx
    1a00:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a03:	48 63 c8             	movslq %eax,%rcx
    1a06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1a0a:	48 01 c8             	add    %rcx,%rax
    1a0d:	0f b6 00             	movzbl (%rax),%eax
    1a10:	0f be c0             	movsbl %al,%eax
    1a13:	29 c2                	sub    %eax,%edx
    1a15:	89 d0                	mov    %edx,%eax
    1a17:	eb 38                	jmp    1a51 <str_ncmp+0xb0>
    1a19:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1a1d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a20:	48 63 d0             	movslq %eax,%rdx
    1a23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a27:	48 01 d0             	add    %rdx,%rax
    1a2a:	0f b6 00             	movzbl (%rax),%eax
    1a2d:	84 c0                	test   %al,%al
    1a2f:	75 8c                	jne    19bd <str_ncmp+0x1c>
    1a31:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a34:	48 63 d0             	movslq %eax,%rdx
    1a37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1a3b:	48 01 d0             	add    %rdx,%rax
    1a3e:	0f b6 00             	movzbl (%rax),%eax
    1a41:	84 c0                	test   %al,%al
    1a43:	0f 85 74 ff ff ff    	jne    19bd <str_ncmp+0x1c>
    1a49:	eb 01                	jmp    1a4c <str_ncmp+0xab>
    1a4b:	90                   	nop
    1a4c:	b8 00 00 00 00       	mov    $0x0,%eax
    1a51:	5d                   	pop    %rbp
    1a52:	c3                   	retq   

0000000000001a53 <str_length>:
    1a53:	f3 0f 1e fa          	endbr64 
    1a57:	55                   	push   %rbp
    1a58:	48 89 e5             	mov    %rsp,%rbp
    1a5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1a5f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1a66:	eb 10                	jmp    1a78 <str_length+0x25>
    1a68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a6c:	48 83 c0 01          	add    $0x1,%rax
    1a70:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1a74:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a7c:	0f b6 00             	movzbl (%rax),%eax
    1a7f:	84 c0                	test   %al,%al
    1a81:	75 e5                	jne    1a68 <str_length+0x15>
    1a83:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a86:	5d                   	pop    %rbp
    1a87:	c3                   	retq   

0000000000001a88 <str_ischar>:
    1a88:	f3 0f 1e fa          	endbr64 
    1a8c:	55                   	push   %rbp
    1a8d:	48 89 e5             	mov    %rsp,%rbp
    1a90:	89 f8                	mov    %edi,%eax
    1a92:	88 45 fc             	mov    %al,-0x4(%rbp)
    1a95:	80 7d fc 60          	cmpb   $0x60,-0x4(%rbp)
    1a99:	7e 0d                	jle    1aa8 <str_ischar+0x20>
    1a9b:	80 7d fc 7a          	cmpb   $0x7a,-0x4(%rbp)
    1a9f:	7f 07                	jg     1aa8 <str_ischar+0x20>
    1aa1:	b8 01 00 00 00       	mov    $0x1,%eax
    1aa6:	eb 18                	jmp    1ac0 <str_ischar+0x38>
    1aa8:	80 7d fc 40          	cmpb   $0x40,-0x4(%rbp)
    1aac:	7e 0d                	jle    1abb <str_ischar+0x33>
    1aae:	80 7d fc 5a          	cmpb   $0x5a,-0x4(%rbp)
    1ab2:	7f 07                	jg     1abb <str_ischar+0x33>
    1ab4:	b8 01 00 00 00       	mov    $0x1,%eax
    1ab9:	eb 05                	jmp    1ac0 <str_ischar+0x38>
    1abb:	b8 00 00 00 00       	mov    $0x0,%eax
    1ac0:	5d                   	pop    %rbp
    1ac1:	c3                   	retq   

0000000000001ac2 <str_isnumber>:
    1ac2:	f3 0f 1e fa          	endbr64 
    1ac6:	55                   	push   %rbp
    1ac7:	48 89 e5             	mov    %rsp,%rbp
    1aca:	89 f8                	mov    %edi,%eax
    1acc:	88 45 fc             	mov    %al,-0x4(%rbp)
    1acf:	80 7d fc 2f          	cmpb   $0x2f,-0x4(%rbp)
    1ad3:	7e 0d                	jle    1ae2 <str_isnumber+0x20>
    1ad5:	80 7d fc 39          	cmpb   $0x39,-0x4(%rbp)
    1ad9:	7f 07                	jg     1ae2 <str_isnumber+0x20>
    1adb:	b8 01 00 00 00       	mov    $0x1,%eax
    1ae0:	eb 05                	jmp    1ae7 <str_isnumber+0x25>
    1ae2:	b8 00 00 00 00       	mov    $0x0,%eax
    1ae7:	5d                   	pop    %rbp
    1ae8:	c3                   	retq   

0000000000001ae9 <str_isalpha>:
    1ae9:	f3 0f 1e fa          	endbr64 
    1aed:	55                   	push   %rbp
    1aee:	48 89 e5             	mov    %rsp,%rbp
    1af1:	89 f8                	mov    %edi,%eax
    1af3:	88 45 fc             	mov    %al,-0x4(%rbp)
    1af6:	80 7d fc 60          	cmpb   $0x60,-0x4(%rbp)
    1afa:	7e 0d                	jle    1b09 <str_isalpha+0x20>
    1afc:	80 7d fc 7a          	cmpb   $0x7a,-0x4(%rbp)
    1b00:	7f 07                	jg     1b09 <str_isalpha+0x20>
    1b02:	b8 01 00 00 00       	mov    $0x1,%eax
    1b07:	eb 2b                	jmp    1b34 <str_isalpha+0x4b>
    1b09:	80 7d fc 40          	cmpb   $0x40,-0x4(%rbp)
    1b0d:	7e 0d                	jle    1b1c <str_isalpha+0x33>
    1b0f:	80 7d fc 5a          	cmpb   $0x5a,-0x4(%rbp)
    1b13:	7f 07                	jg     1b1c <str_isalpha+0x33>
    1b15:	b8 01 00 00 00       	mov    $0x1,%eax
    1b1a:	eb 18                	jmp    1b34 <str_isalpha+0x4b>
    1b1c:	80 7d fc 2f          	cmpb   $0x2f,-0x4(%rbp)
    1b20:	7e 0d                	jle    1b2f <str_isalpha+0x46>
    1b22:	80 7d fc 39          	cmpb   $0x39,-0x4(%rbp)
    1b26:	7f 07                	jg     1b2f <str_isalpha+0x46>
    1b28:	b8 01 00 00 00       	mov    $0x1,%eax
    1b2d:	eb 05                	jmp    1b34 <str_isalpha+0x4b>
    1b2f:	b8 00 00 00 00       	mov    $0x0,%eax
    1b34:	5d                   	pop    %rbp
    1b35:	c3                   	retq   
    1b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1b3d:	00 00 00 

0000000000001b40 <__libc_csu_init>:
    1b40:	f3 0f 1e fa          	endbr64 
    1b44:	41 57                	push   %r15
    1b46:	4c 8d 3d 53 22 00 00 	lea    0x2253(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    1b4d:	41 56                	push   %r14
    1b4f:	49 89 d6             	mov    %rdx,%r14
    1b52:	41 55                	push   %r13
    1b54:	49 89 f5             	mov    %rsi,%r13
    1b57:	41 54                	push   %r12
    1b59:	41 89 fc             	mov    %edi,%r12d
    1b5c:	55                   	push   %rbp
    1b5d:	48 8d 2d 44 22 00 00 	lea    0x2244(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    1b64:	53                   	push   %rbx
    1b65:	4c 29 fd             	sub    %r15,%rbp
    1b68:	48 83 ec 08          	sub    $0x8,%rsp
    1b6c:	e8 8f f4 ff ff       	callq  1000 <_init>
    1b71:	48 c1 fd 03          	sar    $0x3,%rbp
    1b75:	74 1f                	je     1b96 <__libc_csu_init+0x56>
    1b77:	31 db                	xor    %ebx,%ebx
    1b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1b80:	4c 89 f2             	mov    %r14,%rdx
    1b83:	4c 89 ee             	mov    %r13,%rsi
    1b86:	44 89 e7             	mov    %r12d,%edi
    1b89:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1b8d:	48 83 c3 01          	add    $0x1,%rbx
    1b91:	48 39 dd             	cmp    %rbx,%rbp
    1b94:	75 ea                	jne    1b80 <__libc_csu_init+0x40>
    1b96:	48 83 c4 08          	add    $0x8,%rsp
    1b9a:	5b                   	pop    %rbx
    1b9b:	5d                   	pop    %rbp
    1b9c:	41 5c                	pop    %r12
    1b9e:	41 5d                	pop    %r13
    1ba0:	41 5e                	pop    %r14
    1ba2:	41 5f                	pop    %r15
    1ba4:	c3                   	retq   
    1ba5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1bac:	00 00 00 00 

0000000000001bb0 <__libc_csu_fini>:
    1bb0:	f3 0f 1e fa          	endbr64 
    1bb4:	c3                   	retq   

Disassembly of section .fini:

0000000000001bb8 <_fini>:
    1bb8:	f3 0f 1e fa          	endbr64 
    1bbc:	48 83 ec 08          	sub    $0x8,%rsp
    1bc0:	48 83 c4 08          	add    $0x8,%rsp
    1bc4:	c3                   	retq   
